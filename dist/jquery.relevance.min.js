/*! relevance - v1.0.1 - 2013-04-06
* https://github.com/bboyle/relevance
* Copyright (c) 2013 Ben Boyle; Licensed MIT */
"undefined"!==jQuery&&function(e){"use strict";var t="relevant",n="irrelevant",i="relevant-done",r="irrelevant-done",c="button, input, select, textarea",a=function(e){return e.value},o=function(t,n){var i;for("object"!=typeof t&&(t=[t]),i=0;n.length>i;i++)if(-1!==e.inArray(n[i],t))return!0;return!1},s=function(){var t=e(this.form).data("forces-relevance").dependencyMap[this.name],n=e.map(e(this.form.elements[this.name]).filter("select,:checked").filter(":visible"),a);e.each(t,function(e,t){t.items.forcesRelevance("relevant",o(t.values,n)!==t.negate)})},l=function(t){var n,i,r;n=this.closest("form"),n.length&&(i=n.data("forces-relevance"),"object"==typeof i&&(i=i.dependencyMap,"object"==typeof i&&(r=this.add(this.find("select,input")).filter("select,:radio,:checkbox"),r=e.unique(e.map(r,function(e){return e.name})),e.each(r,function(r,c){var s,l=i[c];"object"==typeof l&&e.each(l,function(i,r){t===!1?r.items.forcesRelevance("relevant",!1):(s=e.map(e(n[0].elements[c]).filter("select,:checked").filter(":visible"),a),r.items.forcesRelevance("relevant",o(r.values,s)!==r.negate))})}))))},d={relevant:function(e){var i;return e?(i=this.filter(":hidden").trigger(t),i.length&&l.call(i)):(i=this.filter(":visible").trigger(n),i.length&&l.call(i,!1)),this},show:function(){return this.add(this.find(c)).each(function(){this.removeAttribute("disabled")}),this.stop(!0,!0).removeAttr("hidden").removeAttr("aria-hidden").slideDown(function(){e(this).trigger(i)})},hide:function(){return this.stop(!0,!0).hide(0,function(){var t=e(this);t.filter(c).add(t.find(c)).each(function(){this.setAttribute("disabled","disabled")}),this.setAttribute("hidden","hidden"),this.setAttribute("aria-hidden","true"),t.trigger(r)})},relevantWhen:function(t){var n,i,r,c;return c=t.values||[t.value],t.name?r=t.name:t.id?r=document.getElementById(t.id).name:t.container&&(r=e(t.container).find("select,:radio,:checkbox").attr("name")),t.negate=t.negate===!0,n=this.closest("form"),i=n.data("forces-relevance"),"object"!=typeof i&&(i={},n.data("forces-relevance",i)),"object"!=typeof i.dependencyMap&&(i.dependencyMap={}),"object"!=typeof i.dependencyMap[r]&&(i.dependencyMap[r]=[],e(n[0].elements[r]).filter(":radio,:checkbox").bind("click",s).end().filter("select").bind("change",s)),i.dependencyMap[r].push({items:this,values:c,negate:t.negate}),this.forcesRelevance("relevant",o(c,e.map(e(n[0].elements[r]).filter("select,:checked").filter(":visible"),a))!==t.negate),this},instructions:function(t){return t=e.extend({instructionSelector:".relevance",questionSelector:".questions > li"},t),this.find(t.instructionSelector).each(function(){var n,i,r=e(this),c=r.text().replace(/^[\S\s]*chose \W([^'"’]+)['"’] above[\S\s]*$/,"$1"),s=r.closest(t.questionSelector),l=s.prevAll(t.questionSelector),d=!1;if(/If different to/.test(c))l=l.eq(0),c=l.find(":checkbox").val(),d=!0;else for(n=0;l.length>n;)l.eq(n).is(".section")||(i=e.map(l.eq(n).find("option,:radio,:checkbox"),a),o(c,i)&&(l=l.eq(n))),n++;l=l.add(l.find("select,input")).filter("select,:radio,:checkbox"),s.forcesRelevance("relevantWhen",{name:l.attr("name"),value:c,negate:d})}),this}};e(document).bind("relevant irrelevant",function(t){var n=e(t.target);"relevant"===t.type?n.forcesRelevance("show"):n.forcesRelevance("hide")}),e.fn.forcesRelevance=function(t){return d[t]?d[t].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof t&&t?(e.error("Method "+t+" does not exist on jQuery.forcesRelevance"),void 0):this}}(jQuery);